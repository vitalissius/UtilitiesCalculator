package utilitiescalculator;

import java.awt.Container;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.SystemColor;
import java.awt.Toolkit;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.ParseException;
import java.time.YearMonth;
import javax.swing.*;

import java.util.*;
import javax.swing.border.TitledBorder;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

public class UCWindow extends JFrame {
    private static final String PROPERTIES_FILE_NAME = "utilities.properties";
    private static final Settings SETTINGS = Settings.getInstance();
    private static final Dictionary DICT = Dictionary.INSTANCE;
    private static final YearMonth NOW = YearMonth.now();
    private static final Toolkit TOOLKIT = Toolkit.getDefaultToolkit();
    private static final Resizer RESIZER = Resizer.getInstance("Шрифт", Resizer.FontSize.ELEVEN);
    private static final List<Component> COMPONENTS = new ArrayList<>();

    private final MeterManager mmElec = new MeterManager() {
        @Override boolean isUsedPayment() { return SETTINGS.getUsedElec(); }
        @Override void setUsedPayment(boolean isUsed) { SETTINGS.setUsedElec(isUsed); }
        @Override void setUsedMeter(boolean isUsed) { SETTINGS.setUsedElecMeter(isUsed); }
        @Override void update() { updadeElecPanelComponents(); }
    };
    private final MeterManager mmGas = new MeterManager() {
        @Override boolean isUsedPayment() { return SETTINGS.getUsedGas(); }
        @Override void setUsedPayment(boolean isUsed) { SETTINGS.setUsedGas(isUsed); }
        @Override void setUsedMeter(boolean isUsed) { SETTINGS.setUsedGasMeter(isUsed); }
        @Override void update() { updateGasPanelComponents(); }
    };

    /**
     * Creates new form UCWindow
     */
    public UCWindow() {
        SETTINGS.loadProperties(PROPERTIES_FILE_NAME);
        DICT.setLanguage(SETTINGS.getLanguage());

        initComponents();

        applyLanguage();
        applySize();

        fillData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogElecTariff = new javax.swing.JDialog();
        pnElecBoundary = new javax.swing.JPanel();
        tfElecBoundary = new javax.swing.JTextField();
        lbElecBoundary1 = new javax.swing.JLabel();
        lbElecBoundary2 = new javax.swing.JLabel();
        pnElecPrice = new javax.swing.JPanel();
        tfElecPriceBelow = new javax.swing.JTextField();
        tfElecPriceAbove = new javax.swing.JTextField();
        lbElecBelow1 = new javax.swing.JLabel();
        lbElecBelow2 = new javax.swing.JLabel();
        lbElecAbove1 = new javax.swing.JLabel();
        lbElecAbove2 = new javax.swing.JLabel();
        pnElecPrivilege = new javax.swing.JPanel();
        tfElecPrivilege = new javax.swing.JTextField();
        lbElecPrivilege1 = new javax.swing.JLabel();
        lbElecPrivilege2 = new javax.swing.JLabel();
        pnElecMaxValue = new javax.swing.JPanel();
        tfElecMaxValue = new javax.swing.JTextField();
        btElecTariffSave = new javax.swing.JButton();
        btElecTariffCancel = new javax.swing.JButton();
        dialogGasTariff = new javax.swing.JDialog();
        pnGasPrice = new javax.swing.JPanel();
        tfGasPrice = new javax.swing.JTextField();
        lbGasPrice1 = new javax.swing.JLabel();
        lbGasPrice2 = new javax.swing.JLabel();
        pnGasMaxValue = new javax.swing.JPanel();
        tfGasMaxValue = new javax.swing.JTextField();
        btGasTariffSave = new javax.swing.JButton();
        btGasTariffCancel = new javax.swing.JButton();
        dialogPersonalData = new javax.swing.JDialog();
        lbAccount = new javax.swing.JLabel();
        pnNames = new javax.swing.JPanel();
        tfSurname = new javax.swing.JTextField();
        tfFirstName = new javax.swing.JTextField();
        tfPatronymic = new javax.swing.JTextField();
        lbSurname = new javax.swing.JLabel();
        lbFirstName = new javax.swing.JLabel();
        lbPatronymic = new javax.swing.JLabel();
        pnAddress = new javax.swing.JPanel();
        tfStreet = new javax.swing.JTextField();
        tfBuilding = new javax.swing.JTextField();
        tfApartment = new javax.swing.JTextField();
        lbStreet = new javax.swing.JLabel();
        lbBuilding = new javax.swing.JLabel();
        lbApartment = new javax.swing.JLabel();
        btPersonalSave = new javax.swing.JButton();
        btPersonalCancel = new javax.swing.JButton();
        ftfAccount = new javax.swing.JFormattedTextField();
        dialogViewAndPrint = new javax.swing.JDialog();
        pnDate = new javax.swing.JPanel();
        lbMonth = new javax.swing.JLabel();
        cbMonth = new javax.swing.JComboBox<>();
        lbYear = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox<>();
        pnElec = new javax.swing.JPanel();
        tfElecBegin = new javax.swing.JTextField();
        tfElecEnd = new javax.swing.JTextField();
        tfElecTotal = new javax.swing.JTextField();
        lbElecBegin = new javax.swing.JLabel();
        lbElecEnd = new javax.swing.JLabel();
        lbElecTotal = new javax.swing.JLabel();
        btElecTariff = new javax.swing.JButton();
        lbElecKwh = new javax.swing.JLabel();
        chbElecPanelOnOff = new javax.swing.JCheckBox();
        btSwapElec = new javax.swing.JButton();
        pnGas = new javax.swing.JPanel();
        tfGasBegin = new javax.swing.JTextField();
        tfGasEnd = new javax.swing.JTextField();
        tfGasTotal = new javax.swing.JTextField();
        lbGasBegin = new javax.swing.JLabel();
        lbGasEnd = new javax.swing.JLabel();
        lbGasTotal = new javax.swing.JLabel();
        btGasTariff = new javax.swing.JButton();
        lbGasMc = new javax.swing.JLabel();
        chbGasPanelOnOff = new javax.swing.JCheckBox();
        btSwapGas = new javax.swing.JButton();
        pnTotal = new javax.swing.JPanel();
        lbTotal = new javax.swing.JLabel();
        tfTotal = new javax.swing.JTextField();
        lbTotalHrn = new javax.swing.JLabel();
        btCalculate = new javax.swing.JButton();
        pnPayments = new javax.swing.JPanel();
        chbElec = new javax.swing.JCheckBox();
        chbRent = new javax.swing.JCheckBox();
        chbHeating = new javax.swing.JCheckBox();
        chbHotWater = new javax.swing.JCheckBox();
        chbColdWater = new javax.swing.JCheckBox();
        chbSeverage = new javax.swing.JCheckBox();
        chbGas = new javax.swing.JCheckBox();
        chbGarbage = new javax.swing.JCheckBox();
        chbIntercom = new javax.swing.JCheckBox();
        chbTv = new javax.swing.JCheckBox();
        tfElec = new javax.swing.JTextField();
        tfRent = new javax.swing.JTextField();
        tfHeating = new javax.swing.JTextField();
        tfHotWater = new javax.swing.JTextField();
        tfColdWater = new javax.swing.JTextField();
        tfSeverage = new javax.swing.JTextField();
        tfGas = new javax.swing.JTextField();
        tfGarbage = new javax.swing.JTextField();
        tfIntercom = new javax.swing.JTextField();
        tfTv = new javax.swing.JTextField();
        lbHrn1 = new javax.swing.JLabel();
        lbHrn2 = new javax.swing.JLabel();
        lbHrn3 = new javax.swing.JLabel();
        lbHrn4 = new javax.swing.JLabel();
        lbHrn5 = new javax.swing.JLabel();
        lbHrn6 = new javax.swing.JLabel();
        lbHrn7 = new javax.swing.JLabel();
        lbHrn8 = new javax.swing.JLabel();
        lbHrn9 = new javax.swing.JLabel();
        lbHrn10 = new javax.swing.JLabel();
        btViewAndPrint = new javax.swing.JButton();
        btChangeSize = new javax.swing.JButton();
        btChangeLanguage = new javax.swing.JButton();
        btPersonalData = new javax.swing.JButton();

        dialogElecTariff.setTitle("Тариф на електроенергію");
        dialogElecTariff.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        dialogElecTariff.setIconImage(null);
        dialogElecTariff.setModal(true);
        dialogElecTariff.setResizable(false);

        pnElecBoundary.setBorder(javax.swing.BorderFactory.createTitledBorder("Граничний обсяг електроенергії"));

        tfElecBoundary.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbElecBoundary1.setText("Граничний обсяг електроенергії (ГОЕ):");

        lbElecBoundary2.setText("кВт·год");

        javax.swing.GroupLayout pnElecBoundaryLayout = new javax.swing.GroupLayout(pnElecBoundary);
        pnElecBoundary.setLayout(pnElecBoundaryLayout);
        pnElecBoundaryLayout.setHorizontalGroup(
            pnElecBoundaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnElecBoundaryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbElecBoundary1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(tfElecBoundary, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbElecBoundary2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnElecBoundaryLayout.setVerticalGroup(
            pnElecBoundaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecBoundaryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnElecBoundaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfElecBoundary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbElecBoundary1)
                    .addComponent(lbElecBoundary2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnElecPrice.setBorder(javax.swing.BorderFactory.createTitledBorder("Ціна на електроенергію"));

        tfElecPriceBelow.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfElecPriceAbove.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbElecBelow1.setText("За обсяг, спожитий до ГОЕ:");

        lbElecBelow2.setText("копійок");

        lbElecAbove1.setText("За обсяг, спожитий понад ГОЕ:");

        lbElecAbove2.setText("копійок");

        javax.swing.GroupLayout pnElecPriceLayout = new javax.swing.GroupLayout(pnElecPrice);
        pnElecPrice.setLayout(pnElecPriceLayout);
        pnElecPriceLayout.setHorizontalGroup(
            pnElecPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecPriceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnElecPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbElecBelow1)
                    .addComponent(lbElecAbove1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnElecPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfElecPriceBelow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfElecPriceAbove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnElecPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbElecBelow2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(lbElecAbove2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnElecPriceLayout.setVerticalGroup(
            pnElecPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecPriceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnElecPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfElecPriceBelow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbElecBelow1)
                    .addComponent(lbElecBelow2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnElecPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfElecPriceAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbElecAbove1)
                    .addComponent(lbElecAbove2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnElecPrivilege.setBorder(javax.swing.BorderFactory.createTitledBorder("Пільга"));

        tfElecPrivilege.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbElecPrivilege1.setText("Розмір пільги:");

        lbElecPrivilege2.setText("%");

        javax.swing.GroupLayout pnElecPrivilegeLayout = new javax.swing.GroupLayout(pnElecPrivilege);
        pnElecPrivilege.setLayout(pnElecPrivilegeLayout);
        pnElecPrivilegeLayout.setHorizontalGroup(
            pnElecPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnElecPrivilegeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbElecPrivilege1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfElecPrivilege, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbElecPrivilege2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnElecPrivilegeLayout.setVerticalGroup(
            pnElecPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecPrivilegeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnElecPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfElecPrivilege, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbElecPrivilege1)
                    .addComponent(lbElecPrivilege2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnElecMaxValue.setBorder(javax.swing.BorderFactory.createTitledBorder("Максимальне значення електричного лічильника"));

        tfElecMaxValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout pnElecMaxValueLayout = new javax.swing.GroupLayout(pnElecMaxValue);
        pnElecMaxValue.setLayout(pnElecMaxValueLayout);
        pnElecMaxValueLayout.setHorizontalGroup(
            pnElecMaxValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecMaxValueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfElecMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnElecMaxValueLayout.setVerticalGroup(
            pnElecMaxValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecMaxValueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfElecMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btElecTariffSave.setText("Зберегти");

        btElecTariffCancel.setText("Скасувати");

        javax.swing.GroupLayout dialogElecTariffLayout = new javax.swing.GroupLayout(dialogElecTariff.getContentPane());
        dialogElecTariff.getContentPane().setLayout(dialogElecTariffLayout);
        dialogElecTariffLayout.setHorizontalGroup(
            dialogElecTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogElecTariffLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogElecTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnElecBoundary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnElecPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnElecPrivilege, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogElecTariffLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btElecTariffSave, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btElecTariffCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnElecMaxValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dialogElecTariffLayout.setVerticalGroup(
            dialogElecTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogElecTariffLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnElecBoundary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnElecPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnElecPrivilege, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnElecMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(dialogElecTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btElecTariffSave)
                    .addComponent(btElecTariffCancel))
                .addContainerGap())
        );

        dialogGasTariff.setTitle("Тариф на газ");
        dialogGasTariff.setModal(true);
        dialogGasTariff.setResizable(false);

        pnGasPrice.setBorder(javax.swing.BorderFactory.createTitledBorder("Ціна на газ"));

        tfGasPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbGasPrice1.setText("Ціна на газ:");

        lbGasPrice2.setText("грн за м куб");

        javax.swing.GroupLayout pnGasPriceLayout = new javax.swing.GroupLayout(pnGasPrice);
        pnGasPrice.setLayout(pnGasPriceLayout);
        pnGasPriceLayout.setHorizontalGroup(
            pnGasPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGasPriceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbGasPrice1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(tfGasPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbGasPrice2)
                .addContainerGap())
        );
        pnGasPriceLayout.setVerticalGroup(
            pnGasPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGasPriceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnGasPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfGasPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGasPrice1)
                    .addComponent(lbGasPrice2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnGasMaxValue.setBorder(javax.swing.BorderFactory.createTitledBorder("Максимальне значення газового лічильника"));

        tfGasMaxValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout pnGasMaxValueLayout = new javax.swing.GroupLayout(pnGasMaxValue);
        pnGasMaxValue.setLayout(pnGasMaxValueLayout);
        pnGasMaxValueLayout.setHorizontalGroup(
            pnGasMaxValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGasMaxValueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfGasMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnGasMaxValueLayout.setVerticalGroup(
            pnGasMaxValueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGasMaxValueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfGasMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btGasTariffSave.setText("Зберегти");

        btGasTariffCancel.setText("Скасувати");

        javax.swing.GroupLayout dialogGasTariffLayout = new javax.swing.GroupLayout(dialogGasTariff.getContentPane());
        dialogGasTariff.getContentPane().setLayout(dialogGasTariffLayout);
        dialogGasTariffLayout.setHorizontalGroup(
            dialogGasTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogGasTariffLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogGasTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnGasMaxValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dialogGasTariffLayout.createSequentialGroup()
                        .addComponent(pnGasPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogGasTariffLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btGasTariffSave, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btGasTariffCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        dialogGasTariffLayout.setVerticalGroup(
            dialogGasTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogGasTariffLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnGasPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnGasMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(dialogGasTariffLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btGasTariffCancel)
                    .addComponent(btGasTariffSave))
                .addContainerGap())
        );

        dialogPersonalData.setTitle("Персональні дані платника");
        dialogPersonalData.setModal(true);
        dialogPersonalData.setResizable(false);

        lbAccount.setText("Особистий рахунок:");

        pnNames.setBorder(javax.swing.BorderFactory.createTitledBorder("Прізвище, ім’я та по батькові"));

        lbSurname.setText("Прізвище:");

        lbFirstName.setText("Ім’я:");

        lbPatronymic.setText("По батькові:");

        javax.swing.GroupLayout pnNamesLayout = new javax.swing.GroupLayout(pnNames);
        pnNames.setLayout(pnNamesLayout);
        pnNamesLayout.setHorizontalGroup(
            pnNamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNamesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnNamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSurname)
                    .addComponent(lbFirstName)
                    .addComponent(lbPatronymic))
                .addGap(18, 18, 18)
                .addGroup(pnNamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfSurname, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfPatronymic, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnNamesLayout.setVerticalGroup(
            pnNamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnNamesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnNamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSurname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnNamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFirstName)
                    .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(pnNamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPatronymic)
                    .addComponent(tfPatronymic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Адреса"));

        lbStreet.setText("Вулиця:");

        lbBuilding.setText("Будинок:");

        lbApartment.setText("Квартира:");

        javax.swing.GroupLayout pnAddressLayout = new javax.swing.GroupLayout(pnAddress);
        pnAddress.setLayout(pnAddressLayout);
        pnAddressLayout.setHorizontalGroup(
            pnAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbStreet)
                    .addComponent(lbBuilding)
                    .addComponent(lbApartment))
                .addGap(18, 18, 18)
                .addGroup(pnAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfApartment)
                    .addComponent(tfStreet)
                    .addComponent(tfBuilding))
                .addContainerGap())
        );
        pnAddressLayout.setVerticalGroup(
            pnAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbStreet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBuilding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBuilding))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfApartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbApartment))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btPersonalSave.setText("Зберегти");
        btPersonalSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPersonalSaveActionPerformed(evt);
            }
        });

        btPersonalCancel.setText("Скасувати");
        btPersonalCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPersonalCancelActionPerformed(evt);
            }
        });

        ftfAccount.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout dialogPersonalDataLayout = new javax.swing.GroupLayout(dialogPersonalData.getContentPane());
        dialogPersonalData.getContentPane().setLayout(dialogPersonalDataLayout);
        dialogPersonalDataLayout.setHorizontalGroup(
            dialogPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogPersonalDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnNames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dialogPersonalDataLayout.createSequentialGroup()
                        .addComponent(lbAccount)
                        .addGap(18, 18, 18)
                        .addComponent(ftfAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogPersonalDataLayout.createSequentialGroup()
                        .addGap(0, 157, Short.MAX_VALUE)
                        .addComponent(btPersonalSave)
                        .addGap(18, 18, 18)
                        .addComponent(btPersonalCancel)))
                .addContainerGap())
        );
        dialogPersonalDataLayout.setVerticalGroup(
            dialogPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogPersonalDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAccount)
                    .addComponent(ftfAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(dialogPersonalDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPersonalCancel)
                    .addComponent(btPersonalSave))
                .addContainerGap())
        );

        dialogViewAndPrint.setTitle("Перегляд і роздруківка");
        dialogViewAndPrint.setModal(true);
        dialogViewAndPrint.setResizable(false);

        javax.swing.GroupLayout dialogViewAndPrintLayout = new javax.swing.GroupLayout(dialogViewAndPrint.getContentPane());
        dialogViewAndPrint.getContentPane().setLayout(dialogViewAndPrintLayout);
        dialogViewAndPrintLayout.setHorizontalGroup(
            dialogViewAndPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        dialogViewAndPrintLayout.setVerticalGroup(
            dialogViewAndPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Сплата за комунальні послуги");
        setResizable(false);
        setSize(new java.awt.Dimension(700, 500));

        pnDate.setBorder(javax.swing.BorderFactory.createTitledBorder("Дата"));

        lbMonth.setText("Місяць:");

        cbMonth.setMaximumRowCount(12);
        cbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01 - Січень", "02 - Лютий", "03 - Березень", "04 - Квітень", "05 - Травень", "06 - Червень", "07 - Липень", "08 - Серпень", "09 - Вересень", "10 - Жовтень", "11 - Листопад", "12 - Грудень" }));
        cbMonth.setFocusable(false);

        lbYear.setText("Рік:");

        cbYear.setFocusable(false);

        javax.swing.GroupLayout pnDateLayout = new javax.swing.GroupLayout(pnDate);
        pnDate.setLayout(pnDateLayout);
        pnDateLayout.setHorizontalGroup(
            pnDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMonth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbYear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnDateLayout.setVerticalGroup(
            pnDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMonth)
                    .addComponent(lbYear)
                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pnElec.setBorder(javax.swing.BorderFactory.createTitledBorder("Показання електричного лічильника"));

        tfElecBegin.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfElecEnd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfElecTotal.setEditable(false);
        tfElecTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbElecBegin.setText("Початкові:");

        lbElecEnd.setText("Кінцеві:");

        lbElecTotal.setText("Різниця:");

        btElecTariff.setText("Тариф...");
        btElecTariff.setFocusable(false);
        btElecTariff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btElecTariffActionPerformed(evt);
            }
        });

        lbElecKwh.setText("кВт·год");

        chbElecPanelOnOff.setFocusable(false);

        btSwapElec.setText("^");
        btSwapElec.setFocusable(false);
        btSwapElec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSwapElecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnElecLayout = new javax.swing.GroupLayout(pnElec);
        pnElec.setLayout(pnElecLayout);
        pnElecLayout.setHorizontalGroup(
            pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbElecBegin)
                    .addComponent(lbElecEnd)
                    .addComponent(lbElecTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfElecEnd, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfElecBegin, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfElecTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnElecLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chbElecPanelOnOff))
                    .addGroup(pnElecLayout.createSequentialGroup()
                        .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbElecKwh)
                            .addComponent(btSwapElec))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btElecTariff)))
                .addContainerGap())
        );
        pnElecLayout.setVerticalGroup(
            pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnElecLayout.createSequentialGroup()
                .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnElecLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfElecBegin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbElecBegin)))
                    .addComponent(chbElecPanelOnOff))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfElecEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbElecEnd)
                    .addComponent(btSwapElec))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnElecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfElecTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbElecTotal)
                    .addComponent(lbElecKwh)
                    .addComponent(btElecTariff))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnGas.setBorder(javax.swing.BorderFactory.createTitledBorder("Показання газового лічильника"));

        tfGasBegin.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfGasEnd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfGasTotal.setEditable(false);
        tfGasTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbGasBegin.setText("Початкові:");

        lbGasEnd.setText("Кінцеві:");

        lbGasTotal.setText("Різниця:");

        btGasTariff.setText("Тариф...");
        btGasTariff.setFocusable(false);
        btGasTariff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGasTariffActionPerformed(evt);
            }
        });

        lbGasMc.setText("м куб");

        chbGasPanelOnOff.setFocusable(false);

        btSwapGas.setText("^");
        btSwapGas.setFocusable(false);
        btSwapGas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSwapGasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnGasLayout = new javax.swing.GroupLayout(pnGas);
        pnGas.setLayout(pnGasLayout);
        pnGasLayout.setHorizontalGroup(
            pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbGasBegin)
                    .addComponent(lbGasEnd)
                    .addComponent(lbGasTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfGasEnd, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfGasBegin, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfGasTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnGasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chbGasPanelOnOff))
                    .addGroup(pnGasLayout.createSequentialGroup()
                        .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbGasMc)
                            .addComponent(btSwapGas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btGasTariff)))
                .addContainerGap())
        );
        pnGasLayout.setVerticalGroup(
            pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnGasLayout.createSequentialGroup()
                .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnGasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfGasBegin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbGasBegin)))
                    .addComponent(chbGasPanelOnOff))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfGasEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGasEnd)
                    .addComponent(btSwapGas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnGasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfGasTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGasTotal)
                    .addComponent(lbGasMc)
                    .addComponent(btGasTariff))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnTotal.setBorder(javax.swing.BorderFactory.createTitledBorder("Всього"));

        lbTotal.setText("Загалом:");

        tfTotal.setEditable(false);
        tfTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTotal.setFocusable(false);

        lbTotalHrn.setText("грн");

        btCalculate.setText("Розрахувати");
        btCalculate.setFocusable(false);

        javax.swing.GroupLayout pnTotalLayout = new javax.swing.GroupLayout(pnTotal);
        pnTotal.setLayout(pnTotalLayout);
        pnTotalLayout.setHorizontalGroup(
            pnTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTotalHrn)
                .addGap(18, 18, 18)
                .addComponent(btCalculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnTotalLayout.setVerticalGroup(
            pnTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotal)
                    .addComponent(lbTotalHrn)
                    .addComponent(btCalculate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnPayments.setBorder(javax.swing.BorderFactory.createTitledBorder("Платежі"));

        chbElec.setText("01 Електроенергія:");

        chbRent.setText("02 Квартплата:");

        chbHeating.setText("03 Опалення:");

        chbHotWater.setText("04 Гаряча вода:");

        chbColdWater.setText("05 Холодна вода:");

        chbSeverage.setText("06 Каналізація:");

        chbGas.setText("07, 08 Газ природній:");

        chbGarbage.setText("33 Вивіз сміття:");

        chbIntercom.setText("35 Домофон:");

        chbTv.setText("49 Воля т.п.:");

        tfElec.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfRent.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfHeating.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfHotWater.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfColdWater.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfSeverage.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfGas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfGarbage.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfIntercom.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfTv.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbHrn1.setText("грн");

        lbHrn2.setText("грн");

        lbHrn3.setText("грн");

        lbHrn4.setText("грн");

        lbHrn5.setText("грн");

        lbHrn6.setText("грн");

        lbHrn7.setText("грн");

        lbHrn8.setText("грн");

        lbHrn9.setText("грн");

        lbHrn10.setText("грн");

        javax.swing.GroupLayout pnPaymentsLayout = new javax.swing.GroupLayout(pnPayments);
        pnPayments.setLayout(pnPaymentsLayout);
        pnPaymentsLayout.setHorizontalGroup(
            pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPaymentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbElec)
                    .addComponent(chbRent)
                    .addComponent(chbHeating)
                    .addComponent(chbHotWater)
                    .addComponent(chbColdWater)
                    .addComponent(chbSeverage)
                    .addComponent(chbGas)
                    .addComponent(chbGarbage)
                    .addComponent(chbIntercom)
                    .addComponent(chbTv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfTv, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(tfIntercom)
                    .addComponent(tfGarbage)
                    .addComponent(tfGas)
                    .addComponent(tfSeverage)
                    .addComponent(tfColdWater)
                    .addComponent(tfHotWater)
                    .addComponent(tfHeating)
                    .addComponent(tfRent)
                    .addComponent(tfElec))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbHrn1)
                    .addComponent(lbHrn2)
                    .addComponent(lbHrn3)
                    .addComponent(lbHrn4)
                    .addComponent(lbHrn5)
                    .addComponent(lbHrn6)
                    .addComponent(lbHrn7)
                    .addComponent(lbHrn8)
                    .addComponent(lbHrn9)
                    .addComponent(lbHrn10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnPaymentsLayout.setVerticalGroup(
            pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPaymentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfElec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbElec)
                    .addComponent(lbHrn1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfRent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbRent)
                    .addComponent(lbHrn2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfHeating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbHeating)
                    .addComponent(lbHrn3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfHotWater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbHotWater)
                    .addComponent(lbHrn4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfColdWater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbColdWater)
                    .addComponent(lbHrn5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSeverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbSeverage)
                    .addComponent(lbHrn6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfGas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbGas)
                    .addComponent(lbHrn7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfGarbage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbGarbage)
                    .addComponent(lbHrn8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIntercom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbIntercom)
                    .addComponent(lbHrn9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnPaymentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbTv)
                    .addComponent(lbHrn10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btViewAndPrint.setText("Роздрукувати...");
        btViewAndPrint.setFocusable(false);
        btViewAndPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btViewAndPrintActionPerformed(evt);
            }
        });

        btChangeSize.setText("Шрифт(11)");
        btChangeSize.setFocusable(false);
        btChangeSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChangeSizeActionPerformed(evt);
            }
        });

        btChangeLanguage.setText("Мова(Укр)");
        btChangeLanguage.setFocusable(false);
        btChangeLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChangeLanguageActionPerformed(evt);
            }
        });

        btPersonalData.setText("Персональні дані...");
        btPersonalData.setFocusable(false);
        btPersonalData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPersonalDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btViewAndPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btChangeSize))
                    .addComponent(pnGas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnElec, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btChangeLanguage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btPersonalData, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnPayments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnElec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnGas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnPayments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btPersonalData)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btChangeSize)
                        .addComponent(btChangeLanguage)
                        .addComponent(btViewAndPrint)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectMonth() {
        cbMonth.setSelectedIndex(NOW.getMonthValue() - 1);
    }
    
    private void fillDatePanel() {
        selectMonth();
        
        for (int i = -1; i <= 1; i++) {
            cbYear.addItem(Integer.toString(NOW.getYear() + i));
        }
        cbYear.setSelectedIndex(1);
    }

    private void updadeElecPanelComponents() {
        boolean isSelected = SETTINGS.getUsedElecMeter();
        chbElecPanelOnOff.setSelected(isSelected);
        pnElec.setEnabled(isSelected);
        for (java.awt.Component c : pnElec.getComponents()) {
            if (c != chbElecPanelOnOff) {
                c.setEnabled(isSelected);
            }
        }
    }

    private void fillElecPanel() {
        updadeElecPanelComponents();
        String format = String.format("%%0%dd", Integer.toString(SETTINGS.getElecMeterMaxValue()).length());
        tfElecBegin.setText(String.format(format, SETTINGS.getElecBegin()));
        tfElecEnd.setText(String.format(format, SETTINGS.getElecEnd()));
        tfElecTotal.setText("" + SETTINGS.getElecTotal());
    }
    
    private void updateGasPanelComponents() {
        boolean isSelected = SETTINGS.getUsedGasMeter();
        chbGasPanelOnOff.setSelected(isSelected);
        pnGas.setEnabled(isSelected);
        for (java.awt.Component c : pnGas.getComponents()) {
            if (c != chbGasPanelOnOff) {
                c.setEnabled(isSelected);
            }
        }
    }

    private void fillGasPanel() {
        updateGasPanelComponents();
        String format = String.format("%%0%dd", Integer.toString(SETTINGS.getGasMeterMaxValue()).length());
        tfGasBegin.setText(String.format(format, SETTINGS.getGasBegin()));
        tfGasEnd.setText(String.format(format, SETTINGS.getGasEnd()));
        tfGasTotal.setText("" + SETTINGS.getGasTotal());
    }

    private void fillPayments() {
        chbElec.setSelected(SETTINGS.getUsedElec());
        chbRent.setSelected(SETTINGS.getUsedRent());
        chbHeating.setSelected(SETTINGS.getUsedHeating());
        chbHotWater.setSelected(SETTINGS.getUsedHotWater());
        chbColdWater.setSelected(SETTINGS.getUsedColdWater());
        chbSeverage.setSelected(SETTINGS.getUsedSeverage());
        chbGas.setSelected(SETTINGS.getUsedGas());
        chbGarbage.setSelected(SETTINGS.getUsedGarbage());
        chbIntercom.setSelected(SETTINGS.getUsedIntercom());
        chbTv.setSelected(SETTINGS.getUsedTv());
        
        mmElec.setUpMeter(chbElecPanelOnOff, chbElec, tfElec);
        mmGas.setUpMeter(chbGasPanelOnOff, chbGas, tfGas);
        tfRent.setEnabled(SETTINGS.getUsedRent());
        tfHeating.setEnabled(SETTINGS.getUsedHeating());
        tfHotWater.setEnabled(SETTINGS.getUsedHotWater());
        tfColdWater.setEnabled(SETTINGS.getUsedColdWater());
        tfSeverage.setEnabled(SETTINGS.getUsedSeverage());
        tfGarbage.setEnabled(SETTINGS.getUsedGarbage());
        tfIntercom.setEnabled(SETTINGS.getUsedIntercom());
        tfTv.setEnabled(SETTINGS.getUsedTv());
        
        tfElec.setText(String.format("%.2f", SETTINGS.getPaymentsElec()));
        tfRent.setText(String.format("%.2f", SETTINGS.getPaymentsRent()));
        tfHeating.setText(String.format("%.2f", SETTINGS.getPaymentsHeating()));
        tfHotWater.setText(String.format("%.2f", SETTINGS.getPaymentsHotWater()));
        tfColdWater.setText(String.format("%.2f", SETTINGS.getPaymentsColdWater()));
        tfSeverage.setText(String.format("%.2f", SETTINGS.getPaymentsSeverage()));
        tfGas.setText(String.format("%.2f", SETTINGS.getPaymentsGas()));
        tfGarbage.setText(String.format("%.2f", SETTINGS.getPaymentsGarbage()));
        tfIntercom.setText(String.format("%.2f", SETTINGS.getPaymentsIntercom()));
        tfTv.setText(String.format("%.2f", SETTINGS.getPaymentsTv()));
    }

    private void fillTariffs() {
        tfElecBoundary.setText("" + SETTINGS.getElecBoundary());
        tfElecPriceBelow.setText(String.format("%.2f", SETTINGS.getElecPriceBelowBoundary()));
        tfElecPriceAbove.setText(String.format("%.2f", SETTINGS.getElecPriceAboveBoundary()));
        tfElecPrivilege.setText("" + SETTINGS.getElecPrivilege());
        tfElecMaxValue.setText("" + SETTINGS.getElecMeterMaxValue());
        
        tfGasPrice.setText(String.format("%.2f", SETTINGS.getGasPrice()));
        tfGasMaxValue.setText("" + SETTINGS.getGasMeterMaxValue());
    }

    private void fillPersonalData() {
        ftfAccount.setText(SETTINGS.getPersonalAccount());
        tfSurname.setText(SETTINGS.getPersonalSurname());
        tfFirstName.setText(SETTINGS.getPersonalFirstName());
        tfPatronymic.setText(SETTINGS.getPersonalPatronymic());
        tfStreet.setText(SETTINGS.getPersonalStreet());
        tfBuilding.setText(SETTINGS.getPersonalBuilding());
        tfApartment.setText(SETTINGS.getPersonalApartment());
    }
    
    private void fillListeners() {
        // Слушатель отвечающий за сохранение настроек во время закрытия окна программы:
        addWindowListener(new WindowAdapter() {
            @Override public void windowClosing(WindowEvent e) {
                Dimension screenSize = TOOLKIT.getScreenSize();
                Dimension windowSize = getSize();
                Point location = getLocationOnScreen();
                // Если хотя бы один край окна вышел за границы рабочего стола, - центрируем позицию окна
                if ((location.getX() + windowSize.getWidth()) > screenSize.getWidth() ||
                        (location.getY() + windowSize.getHeight()) > screenSize.getHeight()) {
                    location.setLocation(screenSize.getWidth() / 2 - windowSize.getWidth() / 2,
                            screenSize.getHeight() / 2 - windowSize.getHeight() / 2);
                }
                SETTINGS.setWindowPositionX((int) location.getX());
                SETTINGS.setWindowPositionY((int) location.getY());

                SETTINGS.storeProperties(PROPERTIES_FILE_NAME);
            }
        });

        // Слушатель включения панели электросчётчика:
        chbElecPanelOnOff.addActionListener((e) -> mmElec.panelOnOff());
        // Слушатель активации поля ввода оплаты за электричество:
        chbElec.addActionListener((e) -> mmElec.payments());
        // Случатель позволяющий редактирование суммы к оплате за электроэнергию
        // при блокированном поле ввода (при использовании электросчётчика):
        tfElec.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SETTINGS.getUsedElecMeter()) {
                    tfElec.setEnabled(true);
                    tfElec.requestFocusInWindow();
                }
            }
        });
        // Слушатель блокирующий поле ввода при завершении редактирования суммы к оплате
        // за электроэнергию при использовании электросчётчика:
        tfElec.addFocusListener(new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent e) {
                if (SETTINGS.getUsedElecMeter()) {
                    tfElec.setEnabled(false);
                }
            }
        });

        // Та же самая логика, что и выше, но для панели газового счётчика и поля
        // ввода оплаты за газ:
        chbGasPanelOnOff.addActionListener((e) -> mmGas.panelOnOff());
        chbGas.addActionListener((e) -> mmGas.payments());
        tfGas.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (SETTINGS.getUsedGasMeter()) {
                    tfGas.setEnabled(true);
                    tfGas.requestFocusInWindow();
                }
            }
        });
        tfGas.addFocusListener(new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent e) {
                if (SETTINGS.getUsedGasMeter()) {
                    tfGas.setEnabled(false);
                }
            }
        });

        chbRent.addActionListener((e) -> {
            SETTINGS.setUsedRent(chbRent.isSelected());
            tfRent.setEnabled(SETTINGS.getUsedRent());
        });
        chbHeating.addActionListener((e) -> {
            SETTINGS.setUsedHeating(chbHeating.isSelected());
            tfHeating.setEnabled(SETTINGS.getUsedHeating());
        });
        chbHotWater.addActionListener((e) -> {
            SETTINGS.setUsedHotWater(chbHotWater.isSelected());
            tfHotWater.setEnabled(SETTINGS.getUsedHotWater());
        });
        chbColdWater.addActionListener((e) -> {
            SETTINGS.setUsedColdWater(chbColdWater.isSelected());
            tfColdWater.setEnabled(SETTINGS.getUsedColdWater());
        });
        chbSeverage.addActionListener((e) -> {
            SETTINGS.setUsedSeverage(chbSeverage.isSelected());
            tfSeverage.setEnabled(SETTINGS.getUsedSeverage());
        });
        chbGarbage.addActionListener((e) -> {
            SETTINGS.setUsedGarbage(chbGarbage.isSelected());
            tfGarbage.setEnabled(SETTINGS.getUsedGarbage());
        });
        chbIntercom.addActionListener((e) -> {
            SETTINGS.setUsedIntercom(chbIntercom.isSelected());
            tfIntercom.setEnabled(SETTINGS.getUsedIntercom());
        });
        chbTv.addActionListener((e) -> {
            SETTINGS.setUsedTv(chbTv.isSelected());
            tfTv.setEnabled(SETTINGS.getUsedTv());
        });
    }

    static class MeterInputVerifier extends InputVerifier {
        private final String regex;
        private final int digitsNumber;
        MeterInputVerifier(String regex, int digitsNumber) {
            this.regex = regex;
            this.digitsNumber = digitsNumber;
        }
        @Override
        public boolean verify(JComponent component) {
            JTextField tf = (JTextField) component;
            if (!tf.getText().matches(regex)) {
                tf.setSelectionColor(SystemColor.RED);
                tf.selectAll();
                Runnable sound = (Runnable) TOOLKIT.getDesktopProperty("win.sound.asterisk");
                if (sound != null) {
                    sound.run();
                }
                
                return false;
            }
            tf.setSelectionColor(SystemColor.textHighlight);
            
            int value = Integer.valueOf(tf.getText());
            tf.setText(String.format(String.format("%%0%dd", digitsNumber), value));
            if (tf == tfElecBegin) {
                SETTINGS.setElecBegin(value);
            } else if (tf == tfElecEnd) {
                SETTINGS.setElecEnd(value);
            } else if (tf == tfGasBegin) {
                SETTINGS.setGasBegin(value);
            } else if (tf == tfGasEnd) {
                SETTINGS.setGasEnd(value);
            } else {
                throw new RuntimeException("Some JTextField is not processed");
            }
            tfElecTotal.setText(Integer.toString(SETTINGS.getElecTotal()));
            tfGasTotal.setText(Integer.toString(SETTINGS.getGasTotal()));
            
            return true;
        }
    }

    class PaymentsVerifier extends InputVerifier {
        @Override
        public boolean verify(JComponent input) {
            JTextField tf = (JTextField) input;
            String text = tf.getText();
            if (!text.matches("\\d+(\\.|,)\\d{1,2}")) {
                tf.setSelectionColor(SystemColor.RED);
                tf.selectAll();
                Runnable sound = (Runnable) TOOLKIT.getDesktopProperty("win.sound.asterisk");
                if (sound != null) {
                    sound.run();
                }
                return false;
            }
            tf.setSelectionColor(SystemColor.textHighlight);

            // Если в качестве разделителя при выводе дробных чисел в текстовые поля используется запятая
            // (из-за настроек локали), просто чтобы дать возможность вводить точку или запятую на выбор
            // и не использовать конкретные настройки локали:
            text = text.replace(',', '.');

            if (tf == tfElec) {
                SETTINGS.setPaymentsElec(Double.parseDouble(text));
            } else if (tf == tfRent) {
                SETTINGS.setPaymentsRent(Double.parseDouble(text));
            } else if (tf == tfHeating) {
                SETTINGS.setPaymentsHeating(Double.parseDouble(text));
            } else if (tf == tfHotWater) {
                SETTINGS.setPaymentsHotWater(Double.parseDouble(text));
            } else if (tf == tfColdWater) {
                SETTINGS.setPaymentsColdWater(Double.parseDouble(text));
            } else if (tf == tfSeverage) {
                SETTINGS.setPaymentsSeverage(Double.parseDouble(text));
            } else if (tf == tfGas) {
                SETTINGS.setPaymentsGas(Double.parseDouble(text));
            } else if (tf == tfGarbage) {
                SETTINGS.setPaymentsGarbage(Double.parseDouble(text));
            } else if (tf == tfIntercom) {
                SETTINGS.setPaymentsIntercom(Double.parseDouble(text));
            } else if (tf == tfTv) {
                SETTINGS.setPaymentsTv(Double.parseDouble(text));
            } else {
                throw new RuntimeException("One of the payment's text fields is not processed");
            }
            return true;
        }
    };

    private void fillInputVerifiers() {
        int digitsNumber = Integer.toString(SETTINGS.getElecMeterMaxValue()).length();
        String regex = String.format("[0-9]{1,%d}", digitsNumber);

        tfElecBegin.setInputVerifier(new MeterInputVerifier(regex, digitsNumber));
        tfElecEnd.setInputVerifier(new MeterInputVerifier(regex, digitsNumber));

        digitsNumber = Integer.toString(SETTINGS.getGasMeterMaxValue()).length();
        regex = String.format("[0-9]{1,%d}", digitsNumber);

        tfGasBegin.setInputVerifier(new MeterInputVerifier(regex, digitsNumber));
        tfGasEnd.setInputVerifier(new MeterInputVerifier(regex, digitsNumber));

        tfElec.setInputVerifier(new PaymentsVerifier());
        tfRent.setInputVerifier(new PaymentsVerifier());
        tfHeating.setInputVerifier(new PaymentsVerifier());
        tfHotWater.setInputVerifier(new PaymentsVerifier());
        tfColdWater.setInputVerifier(new PaymentsVerifier());
        tfSeverage.setInputVerifier(new PaymentsVerifier());
        tfGas.setInputVerifier(new PaymentsVerifier());
        tfGarbage.setInputVerifier(new PaymentsVerifier());
        tfIntercom.setInputVerifier(new PaymentsVerifier());
        tfTv.setInputVerifier(new PaymentsVerifier());
    }

    private void fillFormatters() {
        MaskFormatter maskFormatter;
        try {
            maskFormatter = new MaskFormatter("#########");
        } catch (ParseException e) {
            maskFormatter = new MaskFormatter();
        }
        ftfAccount.setFormatterFactory(new DefaultFormatterFactory(maskFormatter));
    }

    private void fillData() {
        fillFormatters();// установка форматтеров должна предшествовать заполнению форматируемых полей данными

        fillDatePanel();
        fillElecPanel();
        fillGasPanel();
        fillPayments();
        fillTariffs();
        fillPersonalData();

        fillListeners();
        fillInputVerifiers();
    }

    private void holdComponents() {
        COMPONENTS.addAll(getAllComponents(this));
        COMPONENTS.addAll(getAllComponents(dialogElecTariff));
        COMPONENTS.addAll(getAllComponents(dialogGasTariff));
        COMPONENTS.addAll(getAllComponents(dialogViewAndPrint));
        COMPONENTS.addAll(getAllComponents(dialogPersonalData));
    }

    private static List<Component> getAllComponents(final Container container) {
        List<Component> components = new ArrayList<>();
        for (java.awt.Component c : container.getComponents()) {
            components.add(c);
            if (c instanceof Container) {
                components.addAll(getAllComponents((Container) c));
            }
        }
        return components;
    }

    private void applySize() {
        RESIZER.setFontSize(SETTINGS.getFontSize());
        if (COMPONENTS.isEmpty()) {
            holdComponents();
        }
        RESIZER.applyTo(COMPONENTS);
        btChangeSize.setText(RESIZER.getText());
        pack();
        dialogElecTariff.pack();
        dialogGasTariff.pack();
        dialogViewAndPrint.pack();
        dialogPersonalData.pack();
    }

    private void applyLanguage() {
        SETTINGS.setLanguage(DICT.getLanguage());
        
        // main window and all dialogs
        this.setTitle(DICT.getWord(Dictionary.Keyword.TITLE_MAIN));
        dialogElecTariff.setTitle(DICT.getWord(Dictionary.Keyword.TITLE_ELEC));
        dialogGasTariff.setTitle(DICT.getWord(Dictionary.Keyword.TITLE_GAS));
        dialogPersonalData.setTitle(DICT.getWord(Dictionary.Keyword.TITLE_PERSONAL));
        dialogViewAndPrint.setTitle(DICT.getWord(Dictionary.Keyword.TITLE_PRINT));
        // all buttons
        btCalculate.setText(DICT.getWord(Dictionary.Keyword.BT_CALCULATE));
        btChangeLanguage.setText(DICT.getText());
        btChangeSize.setText(RESIZER.getText());
        btElecTariff.setText(DICT.getWord(Dictionary.Keyword.BT_TARIFF));
        btElecTariffCancel.setText(DICT.getWord(Dictionary.Keyword.BT_CANCEL));
        btElecTariffSave.setText(DICT.getWord(Dictionary.Keyword.BT_SAVE));
        btGasTariff.setText(DICT.getWord(Dictionary.Keyword.BT_TARIFF));
        btGasTariffCancel.setText(DICT.getWord(Dictionary.Keyword.BT_CANCEL));
        btGasTariffSave.setText(DICT.getWord(Dictionary.Keyword.BT_SAVE));
        btPersonalCancel.setText(DICT.getWord(Dictionary.Keyword.BT_CANCEL));
        btPersonalData.setText(DICT.getWord(Dictionary.Keyword.BT_PERSONAL_DATA));
        btPersonalSave.setText(DICT.getWord(Dictionary.Keyword.BT_SAVE));
        btViewAndPrint.setText(DICT.getWord(Dictionary.Keyword.BT_VIEW_AND_PRINT));
        // one combobox
        cbMonth.removeAllItems();
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_JAN));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_FEB));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_MAR));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_APR));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_MAY));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_JUN));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_JUL));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_AUG));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_SEP));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_OCT));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_NOV));
        cbMonth.addItem(DICT.getWord(Dictionary.Keyword.MTH_DEC));
        selectMonth();
        // 'payment' checboxes
        chbColdWater.setText(DICT.getWord(Dictionary.Keyword.PAY_COLD_WATER));
        chbElec.setText(DICT.getWord(Dictionary.Keyword.PAY_ELEC));
        chbGarbage.setText(DICT.getWord(Dictionary.Keyword.PAY_GARBAGE));
        chbGas.setText(DICT.getWord(Dictionary.Keyword.PAY_GAS));
        chbHeating.setText(DICT.getWord(Dictionary.Keyword.PAY_HEATING));
        chbHotWater.setText(DICT.getWord(Dictionary.Keyword.PAY_HOT_WATER));
        chbIntercom.setText(DICT.getWord(Dictionary.Keyword.PAY_INTERCOM));
        chbRent.setText(DICT.getWord(Dictionary.Keyword.PAY_RENT));
        chbSeverage.setText(DICT.getWord(Dictionary.Keyword.PAY_SEVERAGE));
        chbTv.setText(DICT.getWord(Dictionary.Keyword.PAY_TV));
        // all panels with titled border
        ((TitledBorder) pnAddress.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_ADDRESS));
        ((TitledBorder) pnDate.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_DATE));
        ((TitledBorder) pnElec.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_ELEC));
        ((TitledBorder) pnElecBoundary.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_ELEC_BOUNDARY));
        ((TitledBorder) pnElecMaxValue.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_ELEC_MAX_VALUE));
        ((TitledBorder) pnElecPrice.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_ELEC_PRICE));
        ((TitledBorder) pnElecPrivilege.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_ELEC_PRIVILEGE));
        ((TitledBorder) pnGas.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_GAS));
        ((TitledBorder) pnGasMaxValue.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_GAS_MAX_VALUE));
        ((TitledBorder) pnGasPrice.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_GAS_PRICE));
        ((TitledBorder) pnNames.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_NAMES));
        ((TitledBorder) pnPayments.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_PAYMENT));
        ((TitledBorder) pnTotal.getBorder()).setTitle(DICT.getWord(Dictionary.Keyword.PN_TOTAL));
        // all labels
        lbYear.setText(DICT.getWord(Dictionary.Keyword.LB_YEAR));
        lbMonth.setText(DICT.getWord(Dictionary.Keyword.LB_MONTH));
        lbElecBegin.setText(DICT.getWord(Dictionary.Keyword.LB_BEGIN));
        lbElecEnd.setText(DICT.getWord(Dictionary.Keyword.LB_END));
        lbElecTotal.setText(DICT.getWord(Dictionary.Keyword.LB_TOTAL));
        lbElecKwh.setText(DICT.getWord(Dictionary.Keyword.LB_KWH));
        lbGasBegin.setText(DICT.getWord(Dictionary.Keyword.LB_BEGIN));
        lbGasEnd.setText(DICT.getWord(Dictionary.Keyword.LB_END));
        lbGasTotal.setText(DICT.getWord(Dictionary.Keyword.LB_TOTAL));
        lbGasMc.setText(DICT.getWord(Dictionary.Keyword.LB_MCUBIC));
        lbTotal.setText(DICT.getWord(Dictionary.Keyword.LB_TOTAL));
        lbTotalHrn.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn1.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn2.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn3.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn4.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn5.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn6.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn7.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn8.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn9.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbHrn10.setText(DICT.getWord(Dictionary.Keyword.LB_HRN));
        lbElecBoundary1.setText(DICT.getWord(Dictionary.Keyword.LB_BOUNDARY));
        lbElecBoundary2.setText(DICT.getWord(Dictionary.Keyword.LB_KWH));
        lbElecBelow1.setText(DICT.getWord(Dictionary.Keyword.LB_BELOW_BOUNDARY));
        lbElecBelow2.setText(DICT.getWord(Dictionary.Keyword.LB_CENTS));
        lbElecAbove1.setText(DICT.getWord(Dictionary.Keyword.LB_ABOVE_BOUNDARY));
        lbElecAbove2.setText(DICT.getWord(Dictionary.Keyword.LB_CENTS));
        lbElecPrivilege1.setText(DICT.getWord(Dictionary.Keyword.LB_PRIVILEGE_VALUE));
        lbElecPrivilege2.setText(DICT.getWord(Dictionary.Keyword.LB_PERCENT));
        lbGasPrice1.setText(DICT.getWord(Dictionary.Keyword.LB_PRICE));
        lbGasPrice2.setText(DICT.getWord(Dictionary.Keyword.LB_HRN_PER_MCUBIC));
        lbAccount.setText(DICT.getWord(Dictionary.Keyword.LB_PERSONAL_ACCOUNT));
        lbSurname.setText(DICT.getWord(Dictionary.Keyword.LB_SURNAME));
        lbFirstName.setText(DICT.getWord(Dictionary.Keyword.LB_FIRST_NAME));
        lbPatronymic.setText(DICT.getWord(Dictionary.Keyword.LB_PATRONYMIC));
        lbStreet.setText(DICT.getWord(Dictionary.Keyword.LB_STREET));
        lbBuilding.setText(DICT.getWord(Dictionary.Keyword.LB_BUILDING));
        lbApartment.setText(DICT.getWord(Dictionary.Keyword.LB_APARTMENT));
    }

    private void btChangeSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChangeSizeActionPerformed

        RESIZER.shiftToNextFontSize();
        SETTINGS.setFontSize(RESIZER.getFontSize());
        applySize();

    }//GEN-LAST:event_btChangeSizeActionPerformed

    private void btChangeLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChangeLanguageActionPerformed

        DICT.setLanguage(DICT.getNextLanguage());
        applyLanguage();

    }//GEN-LAST:event_btChangeLanguageActionPerformed

    private void btViewAndPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btViewAndPrintActionPerformed

        dialogViewAndPrint.setLocationRelativeTo(this);
        dialogViewAndPrint.setVisible(true);

    }//GEN-LAST:event_btViewAndPrintActionPerformed
    
    private void btElecTariffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btElecTariffActionPerformed

        dialogElecTariff.setLocationRelativeTo(this);
        dialogElecTariff.setVisible(true);

    }//GEN-LAST:event_btElecTariffActionPerformed

    private void btGasTariffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGasTariffActionPerformed

        dialogGasTariff.setLocationRelativeTo(this);
        dialogGasTariff.setVisible(true);

    }//GEN-LAST:event_btGasTariffActionPerformed

    private void btPersonalDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPersonalDataActionPerformed

        ftfAccount.setText(SETTINGS.getPersonalAccount());
        tfSurname.setText(SETTINGS.getPersonalSurname());
        tfFirstName.setText(SETTINGS.getPersonalFirstName());
        tfPatronymic.setText(SETTINGS.getPersonalPatronymic());
        tfStreet.setText(SETTINGS.getPersonalStreet());
        tfBuilding.setText(SETTINGS.getPersonalBuilding());
        tfApartment.setText(SETTINGS.getPersonalApartment());
        dialogPersonalData.setLocationRelativeTo(this);
        dialogPersonalData.setVisible(true);

    }//GEN-LAST:event_btPersonalDataActionPerformed

    private void btSwapElecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSwapElecActionPerformed

        String begin = tfElecBegin.getText();
        String end = tfElecEnd.getText();
        tfElecBegin.setText(end);
        tfElecEnd.setText(begin);
        SETTINGS.setElecBegin(Integer.parseInt(end));
        SETTINGS.setElecEnd(Integer.parseInt(begin));
        tfElecEnd.requestFocusInWindow();

    }//GEN-LAST:event_btSwapElecActionPerformed

    private void btSwapGasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSwapGasActionPerformed

        String begin = tfGasBegin.getText();
        String end = tfGasEnd.getText();
        tfGasBegin.setText(end);
        tfGasEnd.setText(begin);
        SETTINGS.setGasBegin(Integer.parseInt(end));
        SETTINGS.setGasEnd(Integer.parseInt(begin));
        tfGasEnd.requestFocusInWindow();

    }//GEN-LAST:event_btSwapGasActionPerformed

    private void btPersonalSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPersonalSaveActionPerformed

        SETTINGS.setPersonalAccount(ftfAccount.getText());
        SETTINGS.setPersonalSurname(tfSurname.getText());
        SETTINGS.setPersonalFirstName(tfFirstName.getText());
        SETTINGS.setPersonalPatronymic(tfPatronymic.getText());
        SETTINGS.setPersonalStreet(tfStreet.getText());
        SETTINGS.setPersonalBuilding(tfBuilding.getText());
        SETTINGS.setPersonalApartment(tfApartment.getText());
        dialogPersonalData.setVisible(false);

    }//GEN-LAST:event_btPersonalSaveActionPerformed

    private void btPersonalCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPersonalCancelActionPerformed

        dialogPersonalData.setVisible(false);

    }//GEN-LAST:event_btPersonalCancelActionPerformed
    
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UCWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            UCWindow window = new UCWindow();
            window.setLocation(SETTINGS.getWindowPositionX(), SETTINGS.getWindowPositionY());
            window.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCalculate;
    private javax.swing.JButton btChangeLanguage;
    private javax.swing.JButton btChangeSize;
    private javax.swing.JButton btElecTariff;
    private javax.swing.JButton btElecTariffCancel;
    private javax.swing.JButton btElecTariffSave;
    private javax.swing.JButton btGasTariff;
    private javax.swing.JButton btGasTariffCancel;
    private javax.swing.JButton btGasTariffSave;
    private javax.swing.JButton btPersonalCancel;
    private javax.swing.JButton btPersonalData;
    private javax.swing.JButton btPersonalSave;
    private javax.swing.JButton btSwapElec;
    private javax.swing.JButton btSwapGas;
    private javax.swing.JButton btViewAndPrint;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JCheckBox chbColdWater;
    private javax.swing.JCheckBox chbElec;
    private javax.swing.JCheckBox chbElecPanelOnOff;
    private javax.swing.JCheckBox chbGarbage;
    private javax.swing.JCheckBox chbGas;
    private javax.swing.JCheckBox chbGasPanelOnOff;
    private javax.swing.JCheckBox chbHeating;
    private javax.swing.JCheckBox chbHotWater;
    private javax.swing.JCheckBox chbIntercom;
    private javax.swing.JCheckBox chbRent;
    private javax.swing.JCheckBox chbSeverage;
    private javax.swing.JCheckBox chbTv;
    private javax.swing.JDialog dialogElecTariff;
    private javax.swing.JDialog dialogGasTariff;
    private javax.swing.JDialog dialogPersonalData;
    private javax.swing.JDialog dialogViewAndPrint;
    private javax.swing.JFormattedTextField ftfAccount;
    private javax.swing.JLabel lbAccount;
    private javax.swing.JLabel lbApartment;
    private javax.swing.JLabel lbBuilding;
    private javax.swing.JLabel lbElecAbove1;
    private javax.swing.JLabel lbElecAbove2;
    private javax.swing.JLabel lbElecBegin;
    private javax.swing.JLabel lbElecBelow1;
    private javax.swing.JLabel lbElecBelow2;
    private javax.swing.JLabel lbElecBoundary1;
    private javax.swing.JLabel lbElecBoundary2;
    private javax.swing.JLabel lbElecEnd;
    private javax.swing.JLabel lbElecKwh;
    private javax.swing.JLabel lbElecPrivilege1;
    private javax.swing.JLabel lbElecPrivilege2;
    private javax.swing.JLabel lbElecTotal;
    private javax.swing.JLabel lbFirstName;
    private javax.swing.JLabel lbGasBegin;
    private javax.swing.JLabel lbGasEnd;
    private javax.swing.JLabel lbGasMc;
    private javax.swing.JLabel lbGasPrice1;
    private javax.swing.JLabel lbGasPrice2;
    private javax.swing.JLabel lbGasTotal;
    private javax.swing.JLabel lbHrn1;
    private javax.swing.JLabel lbHrn10;
    private javax.swing.JLabel lbHrn2;
    private javax.swing.JLabel lbHrn3;
    private javax.swing.JLabel lbHrn4;
    private javax.swing.JLabel lbHrn5;
    private javax.swing.JLabel lbHrn6;
    private javax.swing.JLabel lbHrn7;
    private javax.swing.JLabel lbHrn8;
    private javax.swing.JLabel lbHrn9;
    private javax.swing.JLabel lbMonth;
    private javax.swing.JLabel lbPatronymic;
    private javax.swing.JLabel lbStreet;
    private javax.swing.JLabel lbSurname;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JLabel lbTotalHrn;
    private javax.swing.JLabel lbYear;
    private javax.swing.JPanel pnAddress;
    private javax.swing.JPanel pnDate;
    private javax.swing.JPanel pnElec;
    private javax.swing.JPanel pnElecBoundary;
    private javax.swing.JPanel pnElecMaxValue;
    private javax.swing.JPanel pnElecPrice;
    private javax.swing.JPanel pnElecPrivilege;
    private javax.swing.JPanel pnGas;
    private javax.swing.JPanel pnGasMaxValue;
    private javax.swing.JPanel pnGasPrice;
    private javax.swing.JPanel pnNames;
    private javax.swing.JPanel pnPayments;
    private javax.swing.JPanel pnTotal;
    private javax.swing.JTextField tfApartment;
    private javax.swing.JTextField tfBuilding;
    private javax.swing.JTextField tfColdWater;
    private javax.swing.JTextField tfElec;
    private static javax.swing.JTextField tfElecBegin;
    private javax.swing.JTextField tfElecBoundary;
    private static javax.swing.JTextField tfElecEnd;
    private javax.swing.JTextField tfElecMaxValue;
    private javax.swing.JTextField tfElecPriceAbove;
    private javax.swing.JTextField tfElecPriceBelow;
    private javax.swing.JTextField tfElecPrivilege;
    private static javax.swing.JTextField tfElecTotal;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfGarbage;
    private javax.swing.JTextField tfGas;
    private static javax.swing.JTextField tfGasBegin;
    private static javax.swing.JTextField tfGasEnd;
    private javax.swing.JTextField tfGasMaxValue;
    private javax.swing.JTextField tfGasPrice;
    private static javax.swing.JTextField tfGasTotal;
    private javax.swing.JTextField tfHeating;
    private javax.swing.JTextField tfHotWater;
    private javax.swing.JTextField tfIntercom;
    private javax.swing.JTextField tfPatronymic;
    private javax.swing.JTextField tfRent;
    private javax.swing.JTextField tfSeverage;
    private javax.swing.JTextField tfStreet;
    private javax.swing.JTextField tfSurname;
    private javax.swing.JTextField tfTotal;
    private javax.swing.JTextField tfTv;
    // End of variables declaration//GEN-END:variables
}

/**
 * Класс MeterManager реализует логику управления компонентами панели электросчётчика
 * и соответствующего поля ввода в панели оплаты, а также газового счётчика с полем ввода
 * в панели оплаты.
 * 
 * Метод setUpMeter() используется для инициализации состояния панелей электросчётчика и
 * газового счётчика. Инициализация заключается в следующем:
 * - если панель счётчика активна, то соответствующий флажок платежа должен быть включён;
 *   и также соответствующее этому флажку поле ввода - заблокировано, т.к. ввод будет
 *   осуществляться по показанию счётчика.
 * - если панель счётчика неактивна, то соответствующий флажок платежа устанавливается
 *   в зависимости от соответствующих ему настроек из класса настроек; и также состояние
 *   соответствующее этому флажку поле воода устанавливается в зависимости от состояния 
 *   самого флажка - флажок включён - активно поле ввода, т.к. ввод будет осуществляться
 *   вручную, без помощи счётчика.
 * 
 * Метод panelOnOff() отвечает за следующее:
 * - состояние флажка включения/отключения панели сохраняется (методом setUsedMeter());
 * - если вышеупомянутый флажок установлен, - устанавливается соответствующий флажок
 *   платежа, а также сохраняется состояние этого флажка (методом setUsedPayment());
 * - если флажок счётчика влючён, то блокируется ввод в соответствующее текстовое поле
 *   "оплаты", в противном случае ввод разрешается - т.е. если счётчик отключён, то
 *   производится ручной ввод оплаты.
 * - обновляются компоненты панели счётчика (методом update()); при этом выполняются все
 *   необходимые изменения состояний компонентов в зависимости от сохранённых настроек 
 *   на предыдущих шагах.
 * 
 * Метод payments() отвечает за следующее:
 * - если флажок учёта "платежа" установлен, то соответствующее ему текстовое поле
 *   деблокируется;
 * - если вышеупомянутый флажок был выключён, то сохраняется настройка о том, что счётчик
 *   отключён (методом setUsedMeter());
 * - состояние упомянутого флажка также сохраняется (методом setUsedPayment());
 * - обновляются компоненты панели счётчика (методом update()); при этом выполняются все
 *   необходимые изменения состояний компонентов в зависимости от сохранённых настроек 
 *   на предыдущих шагах.
 */
abstract class MeterManager {
    private JCheckBox chbOnOff;
    private JCheckBox chb;
    private JTextField tf;

    MeterManager() {
    }

    abstract boolean isUsedPayment();

    abstract void setUsedPayment(boolean isUsed);

    abstract void setUsedMeter(boolean isUsed);

    abstract void update();

    void setUpMeter(JCheckBox chbOnOff, JCheckBox chb, JTextField tf) {
        this.chbOnOff = chbOnOff;
        this.chb = chb;
        this.tf = tf;
        if (this.chbOnOff.isSelected()) {
            this.chb.setSelected(true);
            this.tf.setEnabled(false);
        } else {
            boolean isUsed = isUsedPayment();
            this.chb.setSelected(isUsed);
            this.tf.setEnabled(isUsed);
        }
    }

    void panelOnOff() {
        boolean isSelected = this.chbOnOff.isSelected();
        setUsedMeter(isSelected);
        if (isSelected) {
            this.chb.setSelected(isSelected);
            setUsedPayment(isSelected);
        }
        this.tf.setEnabled(!isSelected);
        update();
    }

    void payments() {
        boolean isSelected = this.chb.isSelected();
        this.tf.setEnabled(isSelected);
        if (!isSelected) {
            setUsedMeter(isSelected);
        }
        setUsedPayment(isSelected);
        update();
    }
}
